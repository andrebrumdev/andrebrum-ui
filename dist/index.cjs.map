{"version":3,"sources":["../src/index.ts","../src/Button.tsx"],"sourcesContent":["export * from './Button';\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  variant?: 'primary' | 'secondary' | 'ghost';\n};\n\nexport function Button({\n  variant = 'primary',\n  className,\n  ...props\n}: ButtonProps) {\n  const base =\n    'inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium outline-none transition-colors disabled:opacity-50 disabled:cursor-not-allowed px-3 py-2';\n  const variants: Record<NonNullable<ButtonProps['variant']>, string> = {\n    primary:   'bg-brand text-white hover:bg-blue-700',\n    secondary: 'bg-zinc-100 text-zinc-900 hover:bg-zinc-200',\n    ghost:     'bg-transparent text-brand hover:bg-blue-50'\n  };\n\n  return (\n    <button\n      className={twMerge(clsx(base, variants[variant], className))}\n      {...props}\n    />\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCA,kBAAiB;AACjB,4BAAwB;AAoBpB;AAdG,SAAS,OAAO;AAAA,EACrB,UAAU;AAAA,EACV;AAAA,EACA,GAAG;AACL,GAAgB;AACd,QAAM,OACJ;AACF,QAAM,WAAgE;AAAA,IACpE,SAAW;AAAA,IACX,WAAW;AAAA,IACX,OAAW;AAAA,EACb;AAEA,SACE;AAAA,IAAC;AAAA;AAAA,MACC,eAAW,mCAAQ,YAAAA,SAAK,MAAM,SAAS,OAAO,GAAG,SAAS,CAAC;AAAA,MAC1D,GAAG;AAAA;AAAA,EACN;AAEJ;","names":["clsx"]}